- Move the thread structures from the working area to a static array in the
  "ch" structure. Handling would be like a pool of objects.
  - This involves having a configuration option for the maximum number of
    threads like NIL has.
  - Advantages are:
    - Less vulnerable thread structures (to stack overflows).
    - No need for the registry list anymore.
      - It can be kept as an option for compatibility with debuggers.
    - Memory protection would be easier to implement. Guard pages can be
      placed at the base of the stack area, where the thread structures
      currently are.
    - Ports code could be shared with NIL.
  - Disadvantages are:
    - Need to configure a maximum number of threads. Problematic with dynamic
      threading.
    - Need to handle the release of the thread structure (difficult, same
      handling of dynamic threads would be required), could break API too.

- Move the thread structure outside the working area, add one more parameter
  to chThdCreateStatic().
  - Advantages are:
    - Less vulnerable thread structures (to stack overflows).
    - Memory protection would be easier to implement. Guard pages can be
      placed at the base of the stack area, where the thread structures
      currently are.
    - Ports code could be shared with NIL.
    - No need to configure a maximum number of threads.
  - Disadvantages are:
    - API signature break.
    - Problem with chThdCreateFromMemoryPool(). It would need two pools
      (not an option).
    - Thread structure have to be remapped individually.

- Move the thread structure on top of the working area.
  - Advantages are:
    - Less vulnerable thread structures (to stack overflows).
    - Memory protection would be easier to implement. Guard pages can be
      placed at the base of the stack area, where the thread structures
      currently are.
    - No need to configure a maximum number of threads.
    - No API changes.
    - No drawbacks compared to the -current- solution.
  - Disadvantages are:
    - Thread structures are not relocatable separately from the working area.
    - Does not allow certain protection schemes where other threads stacks
      are not accessible. Thread structures must be always globally accessible.
 
