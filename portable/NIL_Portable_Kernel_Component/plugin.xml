<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
<!-- All SPC5 Component extension shall have the namespace "com.st.tools.spc5"-->
   <extension
         id="org.chibios.spc5.components.nil.kernel"
         name="NIL RTOS Portable Kernel Component"
         point="com.st.tools.spc5.extension.v1">
      <component
            headerName="nil.h"
            hidden="true"
            initFunction="chSysInit"
            icon="rsc/chibios.ico"
            isPlatform="false">
            <description>
                NIL RTOS portable kernel files.
            </description>
            <categories>
               <category
                     id="NIL RTOS/Portable Components">
               </category>
            </categories>
            <configuration>
               <description>
                  Portable Kernel options and settings.
               </description>
               <image
                     align="left"
                     file="rsc/chibios48x48.png">
                  <text>
                     NIL RTOS is GPL3-licensed free software. A special exception has been added to the GPL3 in order to allow inclusion in closed source applications, details are in the exception.txt document.
                  </text>
               </image>
               <group
                     columns="1"
                     expanded="false"
                     name="General Options"
                     style="collapsable">
                  <description>
                     Miscellaneous kernel parameters.
                  </description>
                  <property
                        brief="Size, in bits, of the system tick counter."
                        default="1"
                        editable="true"
                        name="System Tick Counter Resolution"
                        required="true"
                        type="enum"
                        value="16,32">
                  </property>
                  <property
                        brief="System Tick frequency in Hz."
                        default="1000"
                        editable="true"
                        name="System Tick Clock Frequency"
                        required="true"
                        type="unsigned">
                  </property>
                  <property
                        brief="System Tick mode, tickless mode enables a more power-efficient mode."
                        default="0"
                        editable="true"
                        name="System Tick Mode"
                        required="true"
                        type="enum"
                        value="Periodic Tick Mode,Tickless Mode">
                     <text>
                        Tickless mode requires support of a special dedicated timer and the implementation of the "ST" driver at HAL level.
If such a timer is not available then select the periodic system tick mode.
                     </text>
                  </property>
                  <property
                        brief="Minimum number of ticks in sleep/timeout directives."
                        default="0"
                        editable="true"
                        name="System Tick Delta"
                        required="true"
                        type="enum"
                        value="2,3,4,5,6,7,8,9,10,11,12,13,14,15,16">
                     <override
                           editable="test:../system_tick_mode/value/text()=&apos;Tickless Mode&apos;"></override>
                     <text>
                        This values is the minimum number of ticks specifiable in a sleep/timeout directive. Usually 2 is fine unless trying extreme system tick frequencies.
                     </text>
                  </property>
               </group>
               <group
                     columns="1"
                     expanded="false"
                     name="Subsystem Options"
                     style="collapsable">
                  <description>
                     Options for enabling or disabling the various subsystems.
                  </description>
                  <property
                        brief="Kernel option NIL_CFG_USE_EVENTS"
                        default="true"
                        editable="true"
                        name="Use Events"
                        required="true"
                        type="boolean">
                  </property>
               </group>
               <group
                     columns="1"
                     expanded="false"
                     name="Debug Options"
                     style="collapsable">
                  <description>
                     Debug-related options.
                  </description>
                  <property
                        brief="Kernel option NIL_CFG_ENABLE_ASSERTS"
                        default="false"
                        editable="true"
                        name="Enable Assertions"
                        required="true"
                        type="boolean">
                  </property>
                  <property
                        brief="Kernel option NIL_CFG_ENABLE_STACK_CHECK"
                        default="false"
                        editable="true"
                        name="Enable Stack Check"
                        required="true"
                        type="boolean">
                  </property>
               </group>
               <group
                     columns="1"
                     expanded="false"
                     name="Hooks"
                     style="collapsable">
                  <description>
                     The kernel functionality can be extended by using the hooks mechanisms. Hooks allow to insert user-defined code in specific kernel code paths. Note that hook code is inserted into a macro definition so lines must be terminated by a \.
                  </description>
                  <property
                        brief="This code is hooked into the NIL_CFG_THREAD_EXT_FIELDS macro"
                        editable="true"
                        name="Thread Extra Fields Hook"
                        required="false"
                        type="formatted">
                  </property>
                  <property
                        brief="This code is hooked into the NIL_CFG_THREAD_EXT_INIT_HOOK macro"
                        editable="true"
                        name="Thread Initialization Hook"
                        required="false"
                        type="formatted">
                  </property>
                  <property
                        brief="This code is hooked into the NIL_CFG_IDLE_ENTER_HOOK macro"
                        editable="true"
                        name="Idle Enter Hook"
                        required="false"
                        type="formatted">
                  </property>
                  <property
                        brief="This code is hooked into the NIL_CFG_IDLE_LEAVE_HOOK macro"
                        editable="true"
                        name="Idle Leave Hook"
                        required="false"
                        type="formatted">
                  </property>
                  <property
                        brief="This code is hooked into the NIL_CFG_SYSTEM_HALT_HOOK macro"
                        editable="true"
                        name="System Halt Hook"
                        required="false"
                        type="formatted">
                  </property>
               </group>
               <group
                     expanded="true"
                     name="Tasks Configuration"
                     style="button">
                  <description>
                     Tasks definition.
                  </description>
                  <text>
                     Tasks are defined as a priority reverse-ordered list, the first element is the highest priority task in the system. Priorities are fixed and cannot change at runtime.
                  </text>
                  <text>
                     Each task will be placed in its own .c file placed under ./source/tasks and named as lower-case of the task symbolic name prefixed by &quot;task_&quot;, a global tasks.c file shall also be generated containing the tasks table and shared code.
                  </text>
                  <property
                        brief="List of the tasks to be created on startup."
                        editable="true"
                        max="16"
                        min="1"
                        name="Tasks"
                        required="true"
                        type="list"
                        value="Readable Name,Symbolic Name,Stack Size,Argument">
                     <group
                           expanded="true"
                           name="Task Settings"
                           style="collapsable">
                        <description>
                           Task settings.
                        </description>
                        <property
                              brief="This is the readable name of the task as shown into NIL-aware debuggers."
                              default="readable name"
                              editable="true"
                              name="Readable Name"
                              required="true"
                              type="string">
                        </property>
                        <property
                              brief="C name used for the task, the name must be a valid C identifier."
                              default="symbolic_name"
                              editable="true"
                              max="32"
                              min="1"
                              name="Symbolic Name"
                              regex="^[a-zA-Z_][a-zA-Z0-9_]*$|^$"
                              required="true"
                              type="string">
                           <text>
                              A task function will be created using this name. A working area will also be statically allocated for the task with &quot;_wa&quot; suffix to this name.
                           </text>
                        </property>
                        <property
                              brief="Size of the stack to be statically allocated for the task."
                              default="128"
                              editable="true"
                              length="8"
                              min="128"
                              name="Stack Size"
                              required="true"
                              type="unsigned">
                        </property>
                        <property
                              brief="Argument to be passed to the task, the argument is expected to be a valid C expression compatible with (void *)."
                              default="NULL"
                              editable="true"
                              name="Argument"
                              required="true"
                              type="string">
                        </property>
                        <text>
                           Task code to be generated into the output file under ./source/tasks.
                        </text>
                        <property
                              brief="Task C module code."
                              editable="true"
                              name="Task Code"
                              required="false"
                              type="formatted">
                           <default>
                              /*
 * Task working area declaration.
 */
THD_WORKING_AREA(TASK_WA_NAME, TASK_STACK_SIZE);

/*
 * Task function.
 */
THD_FUNCTION(TASK_NAME, arg) {

  (void)arg;

  while (true) {

  }
}
                           </default>
                        </property>
                     </group>
                  </property>
                  <text>
                     Code to be placed in ./source/tasks/tasks.c before the generated taks table.
                  </text>
                  <property
                        brief="Shared code to be placed in ./source/tasks.c (if any)."
                        editable="true"
                        name="Shared Code"
                        required="false"
                        type="formatted">
                  </property>
               </group>
           </configuration>
            <exportedFeatures>
               <exportedFeature
                     brief="NIL RTOS kernel API interface"
                     exclusive="false"
                     id="org.chibios.spc5.features.nil.kernel">
               </exportedFeature>
               <exportedFeature
                     brief="ChibiOS/RT kernel configuration interface"
                     exclusive="false"
                     id="org.chibios.spc5.features.nil.kernel.configuration">
               </exportedFeature>
            </exportedFeatures>
            <requiredFeatures>
               <requiredFeature
                     id="org.chibios.spc5.features.nil.kernel.port">
               </requiredFeature>
            </requiredFeatures>
      </component>
   </extension>

</plugin>
